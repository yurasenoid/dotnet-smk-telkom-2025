{
  "openapi": "3.0.1",
  "info": {
    "title": "SMK Telkom 2025 Questions API",
    "description": "API for programming questions and exercises",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://localhost:7000",
      "description": "Development server (HTTPS)"
    },
    {
      "url": "http://localhost:5000",
      "description": "Development server (HTTP)"
    }
  ],
  "paths": {
    "/questions/question-1": {
      "get": {
        "tags": ["Questions"],
        "summary": "Question 1 - Discount calculation with error handling",
        "description": "Calculates final price after applying discount. Requires proper error handling for invalid discount values.",
        "parameters": [
          {
            "name": "discount",
            "in": "query",
            "required": true,
            "description": "Discount amount as string (should be convertible to integer)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Question1Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid discount value",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/questions/question-2": {
      "get": {
        "tags": ["Questions"],
        "summary": "Question 2 - Null reference handling",
        "description": "Gets user initial from external source. Requires proper null handling.",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Question2Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - null user data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/questions/question-3": {
      "post": {
        "tags": ["Questions"],
        "summary": "Question 3 - Discount formula correction",
        "description": "Calculates discount based on percentage. Formula needs to be corrected.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Question3Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Question3Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/questions/question-4": {
      "post": {
        "tags": ["Questions"],
        "summary": "Question 4 - Order discount calculation",
        "description": "Calculates final price for orders with member and bulk discounts.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Question4Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Question4Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/questions/question-5": {
      "get": {
        "tags": ["Questions"],
        "summary": "Question 5 - Library late fee calculation",
        "description": "Calculates late fee based on number of days late.",
        "parameters": [
          {
            "name": "daysLate",
            "in": "query",
            "required": true,
            "description": "Number of days the book is late",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Question5Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid days late value",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Question1Response": {
        "type": "object",
        "properties": {
          "originalPrice": {
            "type": "integer",
            "description": "Original price before discount"
          },
          "discount": {
            "type": "integer",
            "description": "Discount amount applied"
          },
          "finalPrice": {
            "type": "integer",
            "description": "Final price after discount"
          }
        },
        "required": ["originalPrice", "discount", "finalPrice"]
      },
      "Question2Response": {
        "type": "object",
        "properties": {
          "userInitial": {
            "type": "string",
            "description": "User's initial letter"
          }
        },
        "required": ["userInitial"]
      },
      "Question3Request": {
        "type": "object",
        "properties": {
          "price": {
            "type": "integer",
            "description": "Original price"
          },
          "discountPercent": {
            "type": "integer",
            "description": "Discount percentage",
            "minimum": 0,
            "maximum": 100
          }
        },
        "required": ["price", "discountPercent"]
      },
      "Question3Response": {
        "type": "object",
        "properties": {
          "originalPrice": {
            "type": "integer",
            "description": "Original price before discount"
          },
          "discount": {
            "type": "integer",
            "description": "Discount amount calculated"
          },
          "finalPrice": {
            "type": "integer",
            "description": "Final price after discount"
          }
        },
        "required": ["originalPrice", "discount", "finalPrice"]
      },
      "Question4Request": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "format": "double",
            "description": "Price per item"
          },
          "quantity": {
            "type": "integer",
            "description": "Number of items",
            "minimum": 1
          },
          "isMember": {
            "type": "boolean",
            "description": "Whether the customer is a member"
          }
        },
        "required": ["price", "quantity", "isMember"]
      },
      "Question4Response": {
        "type": "object",
        "properties": {
          "originalPrice": {
            "type": "number",
            "format": "double",
            "description": "Original total price before discounts"
          },
          "isMember": {
            "type": "boolean",
            "description": "Whether the customer is a member"
          },
          "quantity": {
            "type": "integer",
            "description": "Number of items ordered"
          },
          "finalPrice": {
            "type": "number",
            "format": "double",
            "description": "Final price after all discounts"
          }
        },
        "required": ["originalPrice", "isMember", "quantity", "finalPrice"]
      },
      "Question5Response": {
        "type": "object",
        "properties": {
          "daysLate": {
            "type": "integer",
            "description": "Number of days late"
          },
          "lateFee": {
            "type": "number",
            "format": "double",
            "description": "Calculated late fee"
          }
        },
        "required": ["daysLate", "lateFee"]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Error type"
          },
          "title": {
            "type": "string",
            "description": "Error title"
          },
          "status": {
            "type": "integer",
            "description": "HTTP status code"
          },
          "detail": {
            "type": "string",
            "description": "Error details"
          },
          "traceId": {
            "type": "string",
            "description": "Trace ID for debugging"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Questions",
      "description": "Programming exercise endpoints"
    }
  ]
}
